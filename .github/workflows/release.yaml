name: CD -> Bump version and create release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create-release:
    if: github.event_name == 'workflow_dispatch'
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@0.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog_increment_filename: body.md

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.REVISION }}
          draft: false
          prerelease: false
          generate_release_notes: false
          body_path: "body.md"

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
          - os: windows-latest
            release_suffix: windows
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4

      - name: Install dependencies
        run: pdm install --dev

      - name: Build
        run: |
          pyinstaller \
            --onefile \
            --collect-data clair_obscur_save_loader \
            --add-data "icon.ico:." \
            --windowed \
            --icon icon.ico \
            --name ESL_${{ matrix.release_suffix }}.exe \
            clair_obscur_save_loader/app.py

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create-release.outputs.tag-name }}
          files: dist/ESL_${{ matrix.release_suffix }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
